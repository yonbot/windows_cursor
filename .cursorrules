# 🎯 SampleCursorProject_NEW 統合ルール v2.0

このルールは、kinopeee/cursorrules v5をベースに、Cursor初心者向け学習プロジェクトの要件を統合したものです。

## 🚀 基本設定
- **言語**: 日本語で応答
- **プロジェクト**: Cursor初心者向け学習プロジェクト
- **安全性**: 初心者向け最大安全レベル
- **フレームワーク**: kinopeee/cursorrules v5 + 初心者向け拡張

## 🎯 魔法のWebセットアップ自動起動ルール

### 特定ワード検知による自動Webセットアップ
以下のいずれかのワードがユーザーメッセージに含まれている場合、**必ず最初に**setup_magic.shを自動実行すること：

#### トリガーワード
- **「カーソル大好き」**
- **「魔法」**

#### 自動実行手順
1. トリガーワードを検知したら、即座に以下を実行：
   ```bash
   bash setup_magic.sh
   ```

2. 実行時のメッセージ：
   ```
   🎯 魔法のワードを検知しました！
   ✨ Webセットアップツールを起動します...
   🚀 setup_magic.shを実行中...
   ```

3. セットアップ完了後：
   ```
   🎊 Webセットアップツールが起動しました！
   🌐 ブラウザで http://localhost:3000 が開きます
   💡 Webインターフェースで以下を設定してください：
   　 ✅ MCPサーバー設定
   　 ✅ Cursor環境構築
   　 ✅ VSCode拡張機能インストール
   　 ✅ Python・Jupyter環境
   ```

#### 注意事項
- **setup_magic.shはWebサーバー起動専用**（Node.js環境構築 + サーバー起動のみ）
- **実際のMCP設定や環境構築はWeb画面から実行**
- **ブラウザが自動で開く**ことを確認する
- **Web経由でのセットアップ完了**まで案内する

## ドキュメント作成ルール

### 最終更新時刻の記載
すべてのドキュメント（.md, .txt, .html）を作成または更新する際は、必ず以下の形式で最終更新時刻を含めること：

- Markdownファイル: ファイルの最後に以下を追加
  ```
  ---
  最終更新: YYYY-MM-DD HH:MM:SS JST
  ```

- HTMLファイル: `</body>`タグの直前に以下を追加
  ```html
  <!-- 最終更新: YYYY-MM-DD HH:MM:SS JST -->
  ```

- その他のテキストファイル: ファイルの最後に以下を追加
  ```
  # 最終更新: YYYY-MM-DD HH:MM:SS JST
  ```

### タイムスタンプの取得方法
MCPサーバーの `get_formatted_timestamp()` 関数を使用して、正確な日本時間のタイムスタンプを取得すること。

## プロジェクト構造
- ObsidianVault/Templates/: ドキュメントテンプレート
- CursorCourse/: 学習コンテンツ
- scripts/: ユーティリティスクリプト
- mcp-time/: MCPタイムサーバー
- setup-web/: Webセットアップツール

## 安全性ガイドライン
- 危険なコマンドの検出と警告
- 初心者に優しい説明
- エラーハンドリングの徹底

## コーディング規約
- コメント: 日本語で詳細に記載
- 変数名: 英語（キャメルケース）
- 関数名: 英語（スネークケース）

## テンプレート使用
- 議事録: 0002_議事録作成テンプレート.md
- Marpスライド: 0004_Marpテンプレート_基本.md
- 要件定義: 0003_要件定義ガイドライン.md

---
最終更新: 2025-01-28 15:45:00 JST 